// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  username String @unique
  email String @unique
  password String
  avatarId Int? 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages Message[]
  assignedProjects Project[] @relation("UserPorjects")
  RefreshToken RefreshToken[]
  assignedTasks Task[] @relation("UserTasks")
  avatar File? @relation(fields: [avatarId], references: [id])

  notifications Notification[]
}

model Project {
  id Int @id @default(autoincrement())
  title String
  description String
  priority String
  status String @default("pending")
  creatorId Int
  deadline DateTime
  type String
  completedAt DateTime?

  tasks Task[]
  messages Message[]
  users User[] @relation("UserPorjects")
}



model Task {
  id Int @id @default(autoincrement())
  title String
  description String
  completed Boolean @default(false)
  createdAt DateTime @default(now())
  completedAt DateTime?

  fileId Int?
  projectId Int 
  creatorId Int
  project Project @relation(fields: [projectId], references: [id])
  file File? @relation(fields: [fileId], references: [id])
  assignedUsers User[] @relation("UserTasks")  
}

model Message {
  id Int @id @default(autoincrement())
  content String
  contentType String?
  projectId Int
  userId Int
  fileId Int?
  project Project @relation(fields: [projectId], references: [id])
  user User @relation(fields: [userId], references: [id])
  file File? @relation(fields: [fileId], references: [id])
}


model RefreshToken {
  id Int @id @default(autoincrement())
  token String
  userId Int
  expiryDate DateTime @default(now())
  user User @relation(references: [id], fields: [id])
}

model File {
  id Int @id @default(autoincrement())
  name String
  path String @unique

  Task Task[]
  Message Message[]
  User User[]
}

model Notification {
  id Int @id @default(autoincrement())
  type String
  description String
  userId Int
  seen Boolean @default(false)

  user User @relation(fields: [userId], references: [id])
}